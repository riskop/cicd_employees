name: Build

on:
    push:
        branches:
        - master
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.set_version.outputs.version }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v5
            - name: Set up Java
              uses: actions/setup-java@v5
              with:
                  distribution: 'temurin'
                  java-version: '21'
                  cache: 'maven'
            - name: Set version
              id: set_version
              run: |
                VERSION="1.0.0-${GITHUB_RUN_NUMBER}"
                echo "Version: $VERSION"            
                echo "VERSION=$VERSION" >> $GITHUB_ENV
                echo "version=$VERSION" >> $GITHUB_OUTPUT
            - name: Build with Maven
              run: ./mvnw -B package -Drevision=$VERSION
            - name: Archive production artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: employees-jar
                  path: target/employees-*.jar

    integration-tests:
        if: false
        runs-on: ubuntu-latest
        needs: build
        env:
            SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/employees
            SPRING_DATASOURCE_USERNAME: employees
            SPRING_DATASOURCE_PASSWORD: employees
        services:
            mariadb:
                image: mariadb:12.1.1-rc
                env:
                    MARIADB_ROOT_PASSWORD: employees
                    MARIADB_DATABASE: employees
                    MARIADB_USER: employees
                    MARIADB_PASSWORD: employees
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="healthcheck.sh --connect --innodb_initialized"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3
        steps:
            - run: echo "Run integration tests here"
            - name: Checkout code
              uses: actions/checkout@v5
            - name: Set up Java
              uses: actions/setup-java@v5
              with:
                  distribution: 'temurin'
                  java-version: '21'
                  cache: 'maven'
            - name: Build with Maven
              run: ./mvnw -B verify 
    
    build-image:
        runs-on: ubuntu-latest
        needs: build
        permissions:
            contents: read
            packages: write
        steps:
            - run: echo "Build Docker images here"
            - name: Checkout code
              uses: actions/checkout@v5
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: employees-jar
                  path: target/
            - name: Read version from build job
              run: |
                VERSION=${{ needs.build.outputs.version }}
                echo "VERSION=$VERSION" >> $GITHUB_ENV
                echo "Version from build job: $VERSION"
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                context: .
                file: Dockerfile.layers
                push: true
                tags: ghcr.io/training360/employees-cd-training-2025-10-13:latest,ghcr.io/training360/employees-cd-training-2025-10-13:${{ env.VERSION }}

    deploy:
        runs-on: ubuntu-latest  
        needs: build-image
        steps:
            - run: echo "Deploy application here"